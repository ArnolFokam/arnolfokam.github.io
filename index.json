
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Manuel Fokam is a Master’s by Dissertation Student in Computer Science. His current research interests revolve around Self-Supervised Representation Learning. He is currently a DeepMind Scholar at his university and has had the honor to be featured in a series of short docs called #AIByYou. Other than that, he often explores different fields of Artificial Intelligence with a particular interest in the mathematical foundations and engineering aspect.\n","date":1675728000,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1675728000,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Manuel Fokam is a Master’s by Dissertation Student in Computer Science. His current research interests revolve around Self-Supervised Representation Learning. He is currently a DeepMind Scholar at his university and has had the honor to be featured in a series of short docs called #AIByYou.","tags":null,"title":"Manuel A. Fokam","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://arnolfokam.github.io/event/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/event/example/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":["Manuel A. Fokam"],"categories":["Deep Learning","Self-Supervised Learning"],"content":"","date":1675728000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1675728000,"objectID":"1b663d612ffd9ddd824ccd5e141121ee","permalink":"https://arnolfokam.github.io/post/contrastive-self-supervised-learning/","publishdate":"2023-02-07T00:00:00Z","relpermalink":"/post/contrastive-self-supervised-learning/","section":"post","summary":"Contrastive Self-Supervised Learning is a method in representation learning that aims at training a neural network to learn how to discriminate different semantic features in images. In this post, we explore the latest research in contrastive self-supervised made around the year 2022.","tags":["Contrastive Learning","Work In Progress","Papers Review"],"title":"Contrastive Self-Supervised Learning in 2022","type":"post"},{"authors":["Michael Beukman","Manuel A. Fokam","Marcel Kruger","Guy Axelrod","Muhammad Nasir","Branden Ingram","Benjamin Rosman","Steven James"],"categories":null,"content":"","date":1675382400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1675382400,"objectID":"ce3d5fc9ccd413a7d99da1342a26be59","permalink":"https://arnolfokam.github.io/publication/mchammer/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/mchammer/","section":"publication","summary":"Procedural content generation (PCG) is a growing field, with numerous applications in the video game industry, and great potential to help create better games at a fraction of the cost of manual creation. However, much of the work in PCG is focused on generating relatively straightforward levels in simple games, as it is challenging to design an optimisable objective function for complex settings. This limits the applicability of PCG to more complex and modern titles, hindering its adoption in industry. Our work aims to address this limitation by introducing a compositional level generation method, which recursively composes simple, low-level generators together to construct large and complex creations. This approach allows for easily-optimisable objectives and the ability to design a complex structure in an interpretable way by referencing lower-level components. We empirically demonstrate that our method outperforms a non-compositional baseline by more accurately satisfying a designer's functional requirements in several tasks. Finally, we provide a qualitative showcase (in Minecraft) illustrating the large and complex, but still coherent, structures that were generated using simple base generators.","tags":[],"title":"Hierarchically Composing Level Generators for the Creation of Complex Structures","type":"publication"},{"authors":["Manuel A. Fokam"],"categories":null,"content":"Currently a course project being turned into a publishable research paper.\n","date":1660003200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1660003200,"objectID":"58a2e4de67bb586d746072dd85a04425","permalink":"https://arnolfokam.github.io/publication/effects-of-annotations/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/effects-of-annotations/","section":"publication","summary":"African languages have recently been the subject of several studies in Natural Language Processing (NLP) and, this has caused a significant increase in their representation in the field. However, most studies tend to focus more on the models than the quality of the datasets when assessing the models' performance in tasks such as Named Entity Recognition (NER). While this works well in most cases, it does not account for the limitations of doing NLP with low-resource languages, that is, the quality and the quantity of the dataset at our disposal. This paper provides an analysis of the performance of various models based on the quality of the dataset. We evaluate different pre-trained models with respect to the entity density per sentence of some African NER datasets. We hope with this study to improve the way NLP studies are done in the context of low-resourced languages.","tags":[],"title":"Effects of Annotations' Density on Named Entity Recognition Models' Performance in the Context of African Languages","type":"publication"},{"authors":["Manuel A. Fokam"],"categories":null,"content":"","date":1646053200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1646053200,"objectID":"96b0a31cab40bd9b41595d2e19a8d42d","permalink":"https://arnolfokam.github.io/award/deepmind-scholarship/","publishdate":"2022-02-28T13:00:00Z","relpermalink":"/award/deepmind-scholarship/","section":"award","summary":"This scholarship is awarded to talented students across the globe to support them during the course of their academic program. As termed by DeepMind, the objective is to \"Enable the next generation of AI researchers and engineers\".","tags":null,"title":"DeepMind Scholarship","type":"award"},{"authors":["Manuel A. Fokam","Ritesh Ajoodha"],"categories":null,"content":"","date":1645401600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1645401600,"objectID":"6323a0f10be4c0e5b09484db6af8c883","permalink":"https://arnolfokam.github.io/publication/influence-of-contrastive-learning/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/influence-of-contrastive-learning/","section":"publication","summary":"Plagiarism during programming assignments is a problem in academia. It hinders the ability of academic instructors to truly judge students’ performance and thus, prevents students from receiving adequate help from their instructors. In cases where the number of code submissions for a particular assignment is relatively small, the instructor can inspect each code submission to determine whether they are similar. But as the number of code submissions grows, it becomes difficult to detect similarities between them. Therefore, this induces the need for an automatic source code plagiarism detector. Previous studies showed that we could use the abstract syntax tree (AST) of a source code to get an accurate representation of the source code for neural network computations. Although a study even presented a recursive artificial neural network named Abstract Syntax Tree-based Neural Network (ASTNN) that could represent source codes into vector embeddings using their ASTs, it does not use contrastive learning paradigms, shown to increase the performance of Siamese networks in similarity detection tasks. Therefore, this paper presents an improved version of the ASTNN for code clone detection, where we modify the original model for contrastive learning. Experiments demonstrated that we outperform the original ASTNN model in code clone detection tasks, with a+5% improvement in the F1-score of our model. This study aims at improving the way we perform similarity detection tasks involving programming languages.","tags":[],"title":"Influence of Contrastive Learning on Source Code Plagiarism Detection through Recursive Neural Networks","type":"publication"},{"authors":null,"categories":null,"content":"","date":1644192000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1644192000,"objectID":"56a8506953e25cae95dadfea375b0b6d","permalink":"https://arnolfokam.github.io/project/salad-os/","publishdate":"2022-02-07T00:00:00Z","relpermalink":"/project/salad-os/","section":"project","summary":"A hobbyistic operating system made for fun. Yes, for fun. Because that's what engineers do when they are bored.","tags":["Operating System","Computer Architecture"],"title":"Salad-OS (ongoing)","type":"project"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://arnolfokam.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"}]